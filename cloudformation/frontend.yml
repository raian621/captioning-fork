Parameters:
  DomainName:
    Description: 'Domain name for your website (example.com)'
    Type: 'String'

Mappings:
  RegionMap:
    us-east-1:
      S3hostedzoneID: 'Z3AQBSTGFYJSTF'
      websiteendpoint: 's3-website-us-east-1.amazonaws.com'
    us-west-1:
      S3hostedzoneID: 'Z2F56UZL2M1ACD'
      websiteendpoint: 's3-website-us-west-1.amazonaws.com'
    us-west-2:
      S3hostedzoneID: 'Z3BJ6K6RIION7M'
      websiteendpoint: 's3-website-us-west-2.amazonaws.com'
    eu-west-1:
      S3hostedzoneID: 'Z1BKCTXD74EZPE'
      websiteendpoint: 's3-website-eu-west-1.amazonaws.com'
    ap-southeast-1:
      S3hostedzoneID: 'Z3O0J2DXBE1FTB'
      websiteendpoint: 's3-website-ap-southeast-1.amazonaws.com'
    ap-southeast-2:
      S3hostedzoneID: 'Z1WCIGYICN2BYD'
      websiteendpoint: 's3-website-ap-southeast-2.amazonaws.com'
    ap-northeast-1:
      S3hostedzoneID: 'Z2M4EHUR26P7ZW'
      websiteendpoint: 's3-website-ap-northeast-1.amazonaws.com'
    sa-east-1:
      S3hostedzoneID: 'Z31GFT0UA1I2HV'
      websiteendpoint: 's3-website-sa-east-1.amazonaws.com'

Resources:
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
    DomainValidationOptions:
      - DomainName: !Ref DomainName
        HostedZoneId: !FindInMap [ 'RegionMap', !Ref 'AWS::Region', 'S3hostedzoneID']
    ValidationMethod: DNS

  FrontendBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref 'DomainName'
      PolicyDocument:
        Id: MyPolicy
        Version: '2012-10-17'
        Statement:
          - Sid: PolicyForCloudFrontPrivateContent
            Action: s3:GetObject
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Condition:
              StringEquals:
                'AWS::SourceArn': !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}'
            Resource: !Sub arn:aws:s3:::${DomainName}/*
      WebsiteConfiguration:
        IndexDocument: 'index.html'

    CloudFrontDistribution:
      Type: 'AWS::CloudFront::Distribution'
      DependsOn:
        - FrontendBucket
      Properties:
        DistributionConfig:
          Origins:
            - S3OriginConfig:
                OriginAccessIdentity:
            
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        DefaultCacheBehavior:
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            QueryString: true
          MaxTTL: 31536000
          TargetOriginId: !Ref FrontendBucket
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: 'index.html'
        IPV6Enabled: true
        Origins:
          
          - S3OriginConfig:
  # myDNS:
  #   Type: 'AWS::Route53::RecordSetGroup'
  #   Properties:
  #     HostedZoneName: !Sub 
  #       - '${Domain}.'
  #       - Domain: !Ref 'DomainName'
  #     Comment: 'Zone apex alias.'
  #     RecordSets:
  #       - Name: !Ref 'DomainName'
  #         Type: 'A'
  #         AliasTarget:
  #           HostedZoneId: !FindInMap [ 'RegionMap', !Ref 'AWS::Region', 'S3hostedzoneID']
  #           DNSName: !FindInMap [ 'RegionMap', !Ref 'AWS::Region', 'websiteendpoint']

Outputs:
  WebsiteURL:
    Value: !GetAtt 'FrontendBucket.WebsiteURL'
    Description: 'URL for website hosted on S3'